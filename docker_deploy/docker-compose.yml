version: "2"
services:
  mydb:
    image: postgres:12-alpine3.15
    environment:
      POSTGRES_PASSWORD: abc123
      POSTGRES_USER: postgres
      POSTGRES_DB: worldSim
    networks:
      - mynetwork
    restart: always

  server:
    build: ./world/
    command: bash -c "./wait-for-it.sh mydb:5432 --strict -- ./server 12345 23456 0"
    ports:
      - "12345:12345"
      - "23456:23456"
    networks:
      - mynetwork
    depends_on:
      - mydb

  upsdb:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=miniups
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "7777:5432"  # expose port
    networks:
      - mynetwork
    healthcheck:  # health check
      test: ["CMD-SHELL", "pg_isready -U postgres -d miniups"]
      interval: 2s
      timeout: 5s
      retries: 5

  miniups:
    build: ./mini-ups/
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    working_dir: /app/mini-ups
    environment:
      - DB_HOST=upsdb
      - WORLD_HOST=server
      - UPS_HOST=vcm-46755.vm.duke.edu
    networks:
      - mynetwork
    depends_on:
      upsdb:
        condition: service_healthy
    command: air


networks:
  mynetwork: